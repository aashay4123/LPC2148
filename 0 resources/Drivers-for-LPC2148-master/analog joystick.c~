#include<lpc214x.h>
#include<my_header.c>


#define DATA_PORT() IO0SET=(1<<16)		 //Function to select data port on LCD
	#define READ_DATA() IO0SET=(1<<17)		 //Function to select read operation on LCD
	#define EN_HI() IO0SET=(1<<18)			 //Function to Enable LCD
	
	
	#define COMMAND_PORT() IO0CLR=(1<<16)	  //Function to select command port on LCD
	#define WRITE_DATA() IO0CLR=(1<<17)		  //Function to select write operation on LCD
	#define EN_LOW() IO0CLR=(1<<18)			  //Function to disable LCD
	
	unsigned char String1[16]={"VINEETH KARTHA"};
	unsigned char String2[16]={"  ARM LPC2148   "};
	 int ind=0;
	void Delay_Small(unsigned char j)
	{
	 unsigned int  i;
	 for(;j>0;j--)
	 {
	  for(i=0; i<1000; i++);
	 } 
	}
	                               
	
	unsigned char Busy_Wait()			   //This function checks the busy status of LCD
	{
	 unsigned int temp=0;
	 EN_LOW();
	 COMMAND_PORT();
	 READ_DATA();
	 
	 IO0PIN&=0xFF87FFFF;	  
	 IO0DIR&=0xFF87FFFF;
	 IO0PIN|=0x00400000;
	 
	 do{
	 EN_HI();
	 EN_LOW();
	 EN_HI();
	 EN_LOW();
	 temp=IO0PIN;
	 }
	 while((temp & 0x00400000)==0x00400000);
	 EN_LOW();
	 WRITE_DATA();
	 IO0DIR&=0xFF80FFFF;
	 IO0DIR|=0x007F0000;
	 return (0);
	}    
	
	
	void LCD_Command(unsigned int data)			  //This function is used to send LCD commands
	{
	 unsigned int temp=0;
	 EN_LOW();
	 COMMAND_PORT();
	 WRITE_DATA();
	 
	 temp=data;
	 IO0PIN&=0xFF87FFFF;
	 IO0PIN|=(temp & 0xF0) << 15;
	
	 EN_HI();
	 EN_LOW();
	 
	 temp=data & 0x0F;
	 IO0PIN&=0xFF87FFFF;
	 IO0PIN|=(temp) << 19;
	
	 EN_HI();
	 EN_LOW();
	 while(Busy_Wait());
	 delay(10);
	} 
	
	
	void LCD_Data(unsigned int data)		   //This function is used to send data to LCD
	{
	 unsigned int temp=0;
	 EN_LOW();
	 DATA_PORT();
	 WRITE_DATA();
	 
	 temp=data;
	 IO0PIN&=0xFF87FFFF;
	 IO0PIN|=(temp & 0xF0) << 15;
	
	 EN_HI();
	 EN_LOW();
	 
	 temp=data & 0x0F;
	 
	 IO0PIN&=0xFF87FFFF;
	 IO0PIN|=(temp) << 19;
	
	 EN_HI();
	 EN_LOW();
	 Delay_Small(1);
	}
	
	void LCD_Init()
	{
	 LCD_Command(0x20);
	 LCD_Command(0x28);
	 LCD_Command(0x0C);
	 LCD_Command(0x06);
	}
	
	
	void LCD_String(unsigned char *data)
	{
	 while(*data)
	 {
	  LCD_Data(*data);
	  data++;
	 } 
	}  


char Temp[2],data[5];
unsigned int xpos,ypos;
char btstatus;

void blink_all(int dir)
{
	int i;
	if(dir)
	{
	for(i=16;i<20;i++)
	{
		IO1SET=(1<<i);
		delay(30);
		IO1CLR=(1<<i);
	}
	}
	else
	{
	for(i=19;i>15;i--)
	{
		IO1SET=(1<<i);
		delay(30);
		IO1CLR=(1<<i);
	}
	}
}
void  Init_UART(int baudrate)					
{  
   unsigned int Baud16;
   U0LCR = 0x83;		            // DLAB = 1
   Baud16 = (Fpclk / 16) / baudrate;  
   U0DLM = Baud16 / 256;							
   U0DLL = Baud16 % 256;	
   U0LCR = 0x03;					
}
void senddata(unsigned char data)
{
  U0THR=data;
  while((U0LSR&0x40)==0);
}

void sendstring(char *str)
{
  while(*str!='\0')
  senddata(*str++);
}

unsigned int receivedata()
{
  unsigned int data;
  data=U0RBR;
  while((U0LSR&0x01)==0);
  return data;
}

void ADC_Init()
{
AD0CR=0x00240200;
}

void DECtoASCII(unsigned int Data)		 //This function converts decimal data into ASCII
{ 
 Temp[1]=(Data % 10) + 48;
 Temp[0]=(Data / 10) + 48;
}

void datacombine(unsigned int Datax,unsigned int Datay, char button)
{
data[0]=(Datax / 10) + 48;
data[1]=(Datax % 10) + 48;
data[2]=(Datay / 10) + 48;
data[3]=(Datay % 10) + 48;
data[4]=button;
}
int main()
{
 int value;
 PINSEL0 = 0x00000005;		// Enable UART0 Rx and Tx pins
 PINSEL1 = 0x05000000;		// Enable AD0.1 and AD0.2
 PINSEL2 = 0x00000000;
 IO0DIR  = 0x00000000;						   //For push buttons
 IO1DIR=(1<<16)|(1<<17)|(1<<18)|(1<<19); //LEDs
 IO1CLR=(1<<16)|(1<<17)|(1<<18)|(1<<19);
 IO0DIR = (1<<22) | (1<<21) | (1<<20) | (1<<19) | (1<<18) | (1<<17) | (1<<16);		// Set P0.16, P0.17, P0.18, P0.19, P0.20, P0.21, P0.22 as Output
 Init_UART(9600);
 ADC_Init();
 LCD_Init();
 LCD_Command(0x01);
 LCD_Command(0x80);
 LCD_String("Joystick");
 delay(200);
 while(1)	
 {
 	//sendstring("Hi");
 	AD0CR = (AD0CR&0xFFFFFF00)|0x02;			   //Select AD0.1 for conversion
  	AD0CR|=(1 << 24);							   //Trigger conversion
 	while((AD0DR1&0x80000000)==0);			   //Wait for the conversion to be completed
  	xpos = AD0DR1; 
	xpos=(xpos>>8)&0x00ff;
	//sendstring("\nThe Xpos is ");
	//DECtoASCII((unsigned int)xpos);
	//sendstring(Temp);
	//delay(100);
	AD0CR = (AD0CR&0xFFFFFF00)|0x04;			   //Select AD0.2 for conversion
  	AD0CR|=(1 << 24);							   //Trigger conversion
 	while((AD0DR2&0x80000000)==0);			   //Wait for the conversion to be completed
  	ypos = AD0DR2;
	ypos=(ypos>>8)&0x00ff;	
	//sendstring("\nThe Ypos is ");
	//DECtoASCII((unsigned int)ypos);
	//sendstring(Temp);
	//sendstring("Hello\n");


	/* BUtton Presses*/
	if((IO0PIN&0x00008000))
		btstatus='a';
	else if(!(IO0PIN&0x00002000))
		btstatus='b';
	else if(!(IO0PIN&0x00001000))
		btstatus='c';
	else if(!(IO0PIN&0x40000000))
		btstatus='d';
	else
		btstatus='e';

	datacombine(xpos,ypos,btstatus);
	sendstring("\n");
	sendstring(data);
	if(ypos==0)
	{
		LCD_Command(0x01);
    	LCD_Command(0x80);
		LCD_Data(0x7F);
		IO1SET=1<<16;
		IO1CLR=1<<17;
		IO1CLR=1<<18;
		IO1CLR=1<<19;
	}
	else if(ypos>=250)
	{
		LCD_Command(0x01);
    	LCD_Command(0xC0);
		LCD_Data(0x7E);
		IO1SET=1<<17;
		IO1CLR=1<<16;
		IO1CLR=1<<18;
		IO1CLR=1<<19;
	}
	else if(xpos>=250)
	{
		LCD_Command(0x01);
    	LCD_Command(0xC0);
		LCD_Data(0x7E);
		IO1SET=1<<18;
		IO1CLR=1<<16;
		IO1CLR=1<<17;
		IO1CLR=1<<19;
	}
	else if(xpos==0)
	{
		LCD_Command(0x01);
    	LCD_Command(0xC0);
		LCD_Data(0x7E);
		IO1SET=1<<19;
		IO1CLR=1<<16;
		IO1CLR=1<<18;
		IO1CLR=1<<17;
	}
	else if(btstatus=='a')
	{
		//blink_all(1);

	}
	else if(btstatus=='b')
	{
		//blink_all(0);
	}
	else
	{
		//blink_all();
		IO1CLR=1<<17;
		IO1CLR=1<<16;
		IO1CLR=1<<18;
		IO1CLR=1<<19;
	}

}
	}